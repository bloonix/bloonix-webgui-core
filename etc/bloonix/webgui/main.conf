# Section: heaven
#
# The base parameter for the heaven framework to load
# classes for the model.
#
# As example if the class are in
#
#   /var/www/bloonix-webgui/lib/Bloonix/Model/Database.pm
#   /var/www/bloonix-webgui/lib/Bloonix/View/Template.pm
#
# then the parameters should set to
#
#   base /var/www/bloonix-webgui/lib
#   model Database
#   view Template

heaven {
    base /srv/bloonix/webgui/lib
    model Database, REST
    view Template, JSON
}

# Section: system
#
# Parameter: user
# Parameter: group
#
# By default the server runs as user bloonix and with the group bloonix.
# If you want that the daemon runs as another user and group just change
# the both parameter. Take care that the logfiles can be written by the user.
#
# Default : bloonix
#
# Parameter timezone
#
# The timezone to load by startup. This is important for the timestamps in 
# the log files.
#
# Default: Europe/Berlin

system {
    user bloonix
    group bloonix
    timezone Europe/Berlin
}

# Section: proc_manager
#
# This section is used to configure the parameter for the process
# manager of bloonix.
#
# Parameter: min_spare_servers
#
# This parameter sets the desired minimum numbers of idle child processes.
# If less than min_spare_servers processes are in idle state, then new
# processes will be forked until the count of min_spare_servers is reached.
#
# Default: 10
#
# Parameter: max_spare_servers
#
# This parameter sets the desired maximum number of idle child processes.
# If equal or more than max_spare_servers processes are in idle state,
# then the excess processes will be killed.
#
# Default: 20
#
# Parameter: max_servers
#
# This parameter sets the absolute maximum number of child processes that
# can be forked.
#
# Default: 50
#
# Parameter: max_requests
#
# This parameter sets how many requests a child process is allowed to
# process. If the value of max_requests is reached then the process will
# stop working and exit.
#
# Default: 0 (unlimited)
#
# Parameter: port
#
# The port number where to listen on.
#
# Default: 9000
#
# Parameter: timeout
#
# This parameter sets the maximum execution time in seconds. After the
# timeout the process is killed by the parent.
#
# Default: 300
#
# Parameter: ipcmod
#
# This parameter sets the module to use for the inter-process communication
# between the child processes and the parent process. There are two modules
# available: file and shm.
#
# The file_module uses a simple file on the filesystem.
# The shm_module uses a shared memory segment.
# 
# Default: file
#
# Parameter: lockfile
#
# With this parameter a filename is set that will be used for the inter-process
# communication. If the shm-module is used then the file will be used to lock
# and unlock for read and write operations against the shared memory segment.
#
# It's possible to use a placeholder for the pid of the parent process: %P
#
# Default: /var/lib/bloonix/blxipc.%P.lock

proc_manager {
    max_servers 10
    min_spare_servers 5
    max_spare_servers 8
    port 9000
}

# Section: webapp
#
# Different common options for the web application itself.

webapp {
    # Set the hostname. This hostname will be used in some
    # templates. As example if the application url is
    # http://my.monitor.net/ then the hostname should be
    # set to my.monitor.net.

    #hostname yourdomain.test

    # The parameter sid_expire_time and sid_refresh_time
    # is for the session handling of logged in users.
    #
    # The parameter sid_expire_time handles the time after
    # a session id will expire if a user is idle.
    #
    # The parameter sid_refresh_time handles the time
    # after the expire time of a session id will be refreshed.
    # This shouldn't happen after each click of a user,
    # but rather each X minutes.

    sid_expire_time 3600
    sid_refresh_time 300

    # If you have a highcharts and highmaps license you can
    # set this parameter to "highcharts".
    # PLEASE NOTE that you are not allowed to use highcharts
    # and highmaps if you has no license!
    # Please see http://www.highcharts.com/.

    chart_library other

    # The path to the html documentation

    html_path /srv/bloonix/webgui/templates/html

    # This parameter manipulates the check interval + timeout.
    # high = 5 seconds interval is at least allowed
    # low = 60 seconds interval is at least allowed

    check_frequency low

    # This parameter handles the format of usernames.
    # By default a username must be in e-mail format
    # like joe@bloonix.de. Set this parameter to "yes"
    # if you want to enable simple usernames, like "joe".

    allow_simple_usernames no
}

# Section: email
#
# Where to send WEBGUI events like login messages.
#
# With the flags parameter you can set which messages
# you want to receive. Set "none" if you don't want to
# receive any mails.

email {
    from root@localhost
    to root@localhost
    subject [BLOONIX-WEBGUI] %s
    flags success-login, failed-login, password-request
}

# Section: database
#
# Database connection options.

database {
    include /etc/bloonix/database/main.conf

    logger {
        file {
            filename /var/log/bloonix/bloonix-webgui-database.log
            filelock 0
            maxlevel info
            minlevel emerg
            message_layout [%T] %L %P %t %X %Y %m (%C)
        }
        #sendmail {
        #    from from-email-addr
        #    to to-email-addr
        #    subject Bloonix webgui database status
        #    maxlevel error
        #    minlevel emerg
        #    maxsize 0
        #    message_layout *** %L ***%NTime: %T%NPID: %P%NMessage: %m%NCaller: %C
        #}
    }
}

# Section: elasticsearch
#
# Elasticsearch connection arguments.

elasticsearch {
    # Protocol like http or https.
    proto http
    # Set a comma separated list of hosts (host:port).
    host 127.0.0.1:9200, 127.0.0.2:9200
    # The complete timeout (connection + request).
    timeout 60
    # How to connect to elasticsearch. "failover" or "balanced" is possible.
    mode balanced
}

# Section: template
#
# The path to the html templates.

template {
    path /srv/bloonix/webgui/templates
}

# Section: log
#
# In this section the logging machine can be confgiured.
# As logger the Perl module Log::Handler is used.
#
# See http://search.cpan.org/~bloonix/Log-Handler/
# And http://search.cpan.org/~bloonix/Log-Handler/lib/Log/Handler/Examples.pod
# Or the manpage: "man Log::Handler::Examples"

logger {
    file {
        filename /var/log/bloonix/bloonix-webgui.log
        filelock 0
        maxlevel info
        minlevel emerg
        timeformat %b %d %Y %H:%M:%S
        message_layout [%T] %L %P %t %X %Y %m (%C)
    }
    #sendmail {
    #    from from-email-addr
    #    to to-email-addr
    #    subject Bloonix webgui status
    #    maxlevel error
    #    minlevel emerg
    #    maxsize 0
    #    message_layout *** %L ***%NTime: %T%NPID: %P%NMessage: %m%NCaller: %C
    #}
}

# Section: wtrm_api_key, wtrm_api
#
# Web transaction monitoring. Configure the host where the WTRM daemon is
# listen to process wtrm requests.
#
#wtrm_api_key your-very-long-api-key
#wtrm_api {
#    proto https
#    host server-name
#    mode failover
#    timeout 30
#    utf8 yes
#    ssl_options {
#        ssl_verify_mode 1
#        ssl_ca_path /etc/ssl/certs
#    }
#}

